{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./styles\";\nimport { useState, useEffect } from \"react\";\nimport { api } from \"../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeMap() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  function fetchUsers() {\n    return _fetchUsers.apply(this, arguments);\n  }\n  function _fetchUsers() {\n    _fetchUsers = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get('/users/show');\n        setData(response.data);\n        console.log(data);\n      } catch (error) {\n        alert(\"Erro ao buscar os usuários\");\n      }\n    });\n    return _fetchUsers.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchUsers();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Lista de Presen\\xE7a\"\n    }), _jsx(Text, {\n      style: styles.itemList,\n      children: \"Camila Regina Pereira\"\n    }), data.map(function (item) {\n      return _jsx(Text, {\n        style: styles.itemList,\n        children: item\n      }, item);\n    })]\n  });\n}","map":{"version":3,"names":["styles","useState","useEffect","api","jsx","_jsx","jsxs","_jsxs","HomeMap","_useState","_useState2","_slicedToArray","data","setData","fetchUsers","_fetchUsers","apply","arguments","_asyncToGenerator","response","get","console","log","error","alert","View","style","container","children","Text","title","itemList","map","item"],"sources":["/Users/brunobandeirafernandes/Documents/Github/React_Native/Aulas_RN/src/screens/HomeMap/index.tsx"],"sourcesContent":["import { View, Text, ScrollView } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { api } from '../../services/api';\r\n\r\nexport default function HomeMap(){\r\n\r\n    const [data, setData] = useState<string[]>([]);\r\n\r\n    // const [data, setData] = useState<string[]>([\r\n    //         'Ana Maria Braga', 'Breno de Souza Faria', 'Carlos Alves Pareira',\r\n    //         'Daniel de Maria Prio', 'João Carlos da Silva','Ana Maria Pereira',\r\n    //         'Pedro Henrique Santos', 'Maria Luiza Oliveira','José Antonio Costa',\r\n    //         'Carla Beatriz Lima','Paulo Roberto Sousa','Laura Fernanda Silva',\r\n    //         'André Luiz Santos', 'Camila Regina Pereira', 'Ricardo Almeida Costa'\r\n    //     ]);\r\n\r\n\r\n    //  Buscar os grupos musculares\r\n  async function fetchUsers() {\r\n    try {\r\n\r\n      const response = await api.get('/users/show');\r\n      setData(response.data); // atualiza o useState\r\n\r\n      console.log(data)\r\n    } catch (error) {  \r\n        alert(\"Erro ao buscar os usuários\")\r\n    }\r\n  }\r\n\r\n  //useEffect para ficar sempre atualizando o estado\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  },[])\r\n\r\n    return(\r\n        // <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Lista de Presença</Text>\r\n                \r\n                <Text style={styles.itemList} >\r\n                    Camila Regina Pereira\r\n                </Text>      \r\n              \r\n                {\r\n                    data.map(item => (\r\n                        <Text \r\n                            key={item}\r\n                            style={styles.itemList}                            \r\n                        >\r\n                            { item }\r\n                        </Text>\r\n                    ))\r\n                }\r\n                \r\n            </View>\r\n        // </ScrollView>\r\n    )\r\n}"],"mappings":";;;;AACA,SAASA,MAAM;AACf,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,GAAG;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,eAAe,SAASC,OAAOA,CAAA,EAAE;EAE7B,IAAAC,SAAA,GAAwBR,QAAQ,CAAW,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAA2B,SAYlCI,UAAUA,CAAA;IAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;MAC1B,IAAI;QAEF,IAAMC,QAAQ,SAAShB,GAAG,CAACiB,GAAG,CAAC,aAAa,CAAC;QAC7CP,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;QAEtBS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,KAAK,CAAC,4BAA4B,CAAC;MACvC;IACF,CAAC;IAAA,OAAAT,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAGDf,SAAS,CAAC,YAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEH,OAEQP,KAAA,CAACkB,IAAI;IAACC,KAAK,EAAE1B,MAAM,CAAC2B,SAAU;IAAAC,QAAA,GAC1BvB,IAAA,CAACwB,IAAI;MAACH,KAAK,EAAE1B,MAAM,CAAC8B,KAAM;MAAAF,QAAA,EAAC;IAAiB,CAAM,CAAC,EAEnDvB,IAAA,CAACwB,IAAI;MAACH,KAAK,EAAE1B,MAAM,CAAC+B,QAAS;MAAAH,QAAA,EAAE;IAE/B,CAAM,CAAC,EAGHhB,IAAI,CAACoB,GAAG,CAAC,UAAAC,IAAI;MAAA,OACT5B,IAAA,CAACwB,IAAI;QAEDH,KAAK,EAAE1B,MAAM,CAAC+B,QAAS;QAAAH,QAAA,EAErBK;MAAI,GAHDA,IAIH,CAAC;IAAA,CACV,CAAC;EAAA,CAGJ,CAAC;AAGnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}